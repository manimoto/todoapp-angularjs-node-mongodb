{"version":3,"sources":["Controllers/NinjaController.ts"],"names":[],"mappings":"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","file":"Controllers/NinjaController.js","sourcesContent":["module App.Controllers {\r\n    import NinjaModel = App.Models.NinjaModel;\r\n\r\n    interface INinjaBindings {\r\n        name: string;\r\n        ninjas: NinjaModel[];\r\n        newninja: NinjaModel;\r\n        delMsg: string;\r\n    }\r\n\r\n    interface INinjaController extends INinjaBindings {\r\n        removeAll(): void;\r\n        removeNinja(ninja: NinjaModel): void;\r\n        addNinja(): void;\r\n        setAllNinjaFromJson(): void;\r\n        addNinja(): void;\r\n    }\r\n\r\n    interface INinjaControllerScope extends ng.IScope {\r\n        ninjaCntrl: NinjaController;\r\n    }\r\n\r\n    export class NinjaController implements INinjaController {\r\n\r\n        public name: string;\r\n        public ninjas: any[] = [];\r\n        public removedNinja: number;\r\n        public delMsg: string;\r\n        public newninja: NinjaModel;\r\n\r\n        removeAll(): void {\r\n            this.getNinjas.removeAllNinja().then((response: any) => {\r\n                this.delMsg = response.message;\r\n                this.ninjas = [];\r\n            },\r\n                (reject) => { alert(\"Something Went Wrong at Service/Backend Level\"); }\r\n            )\r\n        };\r\n\r\n        removeNinja(ninja: NinjaModel): void {\r\n            this.removedNinja = this.ninjas.indexOf(ninja);\r\n            console.log(ninja._id);\r\n            this.getNinjas.removeOneNinja(ninja._id).then((response: any) => {\r\n                if (response.message == 'Ninja Successfully Deleted!') {\r\n                    this.ninjas.splice(this.removedNinja, 1);\r\n                    this.delMsg = response.message;\r\n                }\r\n                else {\r\n                    this.delMsg = response.message;\r\n                    alert(\"Something Went Wrong\" + this.delMsg);\r\n                }\r\n            },\r\n                (reject) => { alert(\"Something Went Wrong at Service/Backend Level\"); }\r\n\r\n            )\r\n        };\r\n\r\n        addNinja(): void {\r\n            this.newninja.available= true;\r\n            this.getNinjas.addOneNewNinja(this.newninja).then((response) => {\r\n                this.ninjas.push(response);\r\n                this.newninja.name = \"\",\r\n                this.newninja.belt = \"\",\r\n                this.newninja.rate = 0\r\n                this.newninja.available= true;\r\n            },\r\n                (reject) => { alert(\"Something Went Wrong\"); }\r\n            )\r\n            \r\n\r\n           \r\n        };\r\n\r\n        setAllNinjaFromJson(): void {\r\n            this.getNinjasFromJson.allNinjaJson().then((response: any[]) => {\r\n                console.log(response);\r\n                this.$route.reload();\r\n            },\r\n                (Error) => {\r\n                    alert(\"Controller Error\" + Error);\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        static $inject = ['getNinjasData', 'getNinjas', 'getNinjasFromJson', '$route'];\r\n        constructor(private getNinjasData, private getNinjas: App.Services.GetNinjas, private getNinjasFromJson: App.Services.getNinjasFromJson, private $route) {\r\n            this.name = \"Manish sharma\";\r\n            //console.log(1, getNinjasData)\r\n            this.ninjas = getNinjasData;\r\n        }\r\n    }\r\n}\r\napp2.controller('NinjaController', App.Controllers.NinjaController);"],"sourceRoot":"/source/"}