{"version":3,"sources":["node_moduless/rx/ts/core/abstractobserver.ts"],"names":[],"mappings":"AAAA,oDAAoD;AACpD,2CAA2C;AAC3C,IAAO,EAAE,CA2CR;AA3CD,WAAO,EAAE;IACL,IAAc,SAAS,CAyCtB;IAzCD,WAAc,SAAS;IAyCvB,CAAC,EAzCa,SAAS,GAAT,YAAS,KAAT,YAAS,QAyCtB;AACL,CAAC,EA3CM,EAAE,KAAF,EAAE,QA2CR;AAED,CAAC;IACG,IAAI,SAA+B,CAAC;IACpC,IAAI,gBAAuD,CAAC;IAE5D,SAAS,GAAG,gBAAgB,CAAC;AACjC,CAAC,CAAC,CAAC","file":"node_moduless/rx/ts/core/abstractobserver.js","sourcesContent":["/// <reference path=\"./disposables/disposable.ts\" />\n/// <reference path=\"./observer-lite.ts\" />\nmodule Rx {\n    export module internals {\n        /**\n        * Abstract base class for implementations of the Observer class.\n        * This base class enforces the grammar of observers where OnError and OnCompleted are terminal messages.\n        */\n        export interface AbstractObserver<T> extends Rx.IObserver<T>, Rx.IDisposable {\n            /**\n            * Notifies the observer of a new element in the sequence.\n            * @param {Any} value Next element in the sequence.\n            */\n            onNext(value: T): void;\n            /**\n            * Notifies the observer that an exception has occurred.\n            * @param {Any} error The error that has occurred.\n            */\n            onError(exception: any): void;\n            /**\n            * Notifies the observer of the end of the sequence.\n            */\n            onCompleted(): void;\n\n            isStopped: boolean;\n\n            /**\n            * Disposes the observer, causing it to transition to the stopped state.\n            */\n            dispose(): void;\n\n            fail(e: any): boolean;\n\n            // Must be implemented by other observers\n            next(value: T): void;\n            error(error: any): void;\n            completed(): void;\n        }\n\n        interface AbstractObserverStatic {\n            new <T>(): AbstractObserver<T>;\n        }\n\n        export var AbstractObserver: AbstractObserverStatic\n    }\n}\n\n(function() {\n    var iObserver: Rx.IObserver<number>;\n    var abstractObserver: Rx.internals.AbstractObserver<number>;\n\n    iObserver = abstractObserver;\n});\n"],"sourceRoot":"/source/"}