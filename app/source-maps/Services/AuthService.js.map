{"version":3,"sources":["Services/AuthService.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CAiET;AAjED,WAAO,GAAG;IAAC,IAAA,QAAQ,CAiElB;IAjEU,WAAA,QAAQ;QACf;YA4CG;;;;;;;;gBAQI;YAEH,qBAAoB,KAAsB;gBACtC,sCAAsC;gBAC9B,mBAAqD,EACrD,YAAoB,EACpB,UAAqB;gBAC7B,6CAA6C;;gBAL7B,UAAK,GAAL,KAAK,CAAiB;gBAE9B,wBAAmB,GAAnB,mBAAmB,CAAkC;gBACrD,iBAAY,GAAZ,YAAY,CAAQ;gBACpB,eAAU,GAAV,UAAU,CAAW;YAIjC,CAAC;YA7DD,2BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;gBAAxC,iBAwBC;gBAvBG,IAAI,IAAI,GAAG,+BAA+B,GAAG,QAAQ,GAAG,YAAY,GAAG,QAAQ,CAAC;gBAChF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EACpC,IAAI,EACJ,EAAE,OAAO,EAAE,EAAE,cAAc,EAAE,mCAAmC,EAAE,EAAE,CAAC;qBACpE,IAAI,CAAC,UAAC,QAAQ;oBACX,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;oBACxB,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;oBAC1C,sCAAsC;oBACtC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,GAAG;wBACjD,KAAK,EAAE,GAAG,CAAC,cAAc,CAAC;wBAC1B,QAAQ,EAAE,QAAQ;wBAClB,eAAe,EAAE,GAAG,CAAC,iBAAiB,CAAC;wBACvC,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC;qBAC9B,CAAC;oBACF,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;oBAC1C,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;oBACzC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,gBAAgB,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEtE,CAAC,EAAE;oBACC,KAAK,CAAC,2CAA2C,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;YAEX,CAAC;YACD,iCAAW,GAAX,UAAY,WAAW;gBACnB,IAAI,QAAQ,GAAG,YAAY,CAAC,6BAA6B,CAAC,CAAC;gBAC3D,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAAC,MAAM,CAAC,aAAa,CAAC;gBAC1D,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;oBAAC,MAAM,CAAC,iBAAiB,CAAC;gBACrF,IAAI,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,eAAe,GAAG,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAChE;;;;;;;;qBAQK;YACN,CAAC;YAqBL,kBAAC;QAAD,CA/DA,AA+DC,IAAA;QA/DY,oBAAW,cA+DvB,CAAA;IACL,CAAC,EAjEU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAiElB;AAAD,CAAC,EAjEM,GAAG,KAAH,GAAG,QAiET;AACD,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC","file":"Services/AuthService.js","sourcesContent":["module App.Services {\r\n    export class AuthService{\r\n        login(userName: string, password: string) {\r\n            let data = \"grant_type=password&username=\" + userName + \"&password=\" + password;\r\n            return this.$http.post(this.baseUrlLogin,\r\n                data,\r\n                { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\r\n                .then((response) => {\r\n                    let res = response.data;\r\n                    this.localStorageService.storage.$reset();\r\n                    //this.cacheService.cache.removeAll();\r\n                    userName = userName.split('@')[0];\r\n                    this.localStorageService.storage.authorizationData = {\r\n                        token: res[\"access_token\"],\r\n                        userName: userName,\r\n                        userpermissions: res[\"userpermissions\"],\r\n                        userroles: res['userroles']\r\n                    };\r\n                    this.localStorageService.storage.$apply();\r\n                    this.localStorageService.storage.$sync();\r\n                    this.$rootScope.$broadcast('userAuthorized', res[\"access_token\"]);\r\n                    \r\n                }, () => {\r\n                    alert(\"error in authentication. please try again\");\r\n                });\r\n                            \r\n        }\r\n        IsAuthorize(permissions) {\r\n            var authData = localStorage[\"ngStorage-authorizationData\"];\r\n            authData = JSON.parse(authData);\r\n            if (!authData || !authData['token']) return \"NotLoggedIn\";\r\n            if (!authData['userroles'] || !authData['userpermissions']) return \"AccessForbidden\";\r\n            let userroles = authData['userroles'].split(',');\r\n            let userpermissions = authData[\"userpermissions\"].split(',');\r\n         /*   if (userroles.indexOf('Admin')\r\n                || userroles.indexOf('SuperAdmin')\r\n                || _.intersection(permissions, userpermissions).length > 0\r\n            ) {\r\n                return \"Allow\";\r\n            } else {\r\n                return \"AccessForbidden\";\r\n            }\r\n            */\r\n        }\r\n\r\n       /* haspermissiontoview(permissions) {\r\n            var authData = localStorage[\"ngStorage-authorizationData\"];\r\n            authData = JSON.parse(authData);\r\n            let userpermissions = authData[\"userpermissions\"].split(',');\r\n            if (_.intersection(permissions, userpermissions).length != 0) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }*/\r\n\r\n        constructor(private $http: ng.IHttpService,\r\n            //private $state: ng.ui.IStateService,\r\n            private localStorageService: App.Services.LocalStorageService,\r\n            private baseUrlLogin: string,\r\n            private $rootScope: ng.IScope\r\n            //private cacheService: Services.CacheService\r\n        ) {\r\n            \r\n        }\r\n    }\r\n}\r\napp2.service('authService', App.Services.AuthService);\r\n\r\n\r\n"],"sourceRoot":"/source/"}