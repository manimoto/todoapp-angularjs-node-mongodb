{"version":3,"sources":["Services/AuthInterceptor.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CAsCL;AAtCL,WAAO,GAAG;IAAC,IAAA,QAAQ,CAsCd;IAtCM,WAAA,QAAQ;QAEX;YA0BI,yBAAY,mBAAqD,EAC7D,SAA8B,EAC9B,EAAgB;gBAFpB,iBAOC;gBA5BD,YAAO,GAAG,UAAC,MAAM;oBACb,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;oBAEtC,IAAI,QAAQ,GAAG,YAAY,CAAC,6BAA6B,CAAC,CAAC;oBAC3D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACX,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;wBAChC,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC;oBAC/C,CAAC;oBACD,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC,CAAA;gBACD,kBAAa,GAAG,UAAC,SAAc;oBAC3B,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBAC3B,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;oBAC9B,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBAChC,QAAQ,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;oBACxC,CAAC;oBACD,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;gBAC/C,CAAC,CAAA;gBAMG,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;gBAC/C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;gBACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC/B,CAAC;YAEL,sBAAC;QAAD,CAnCA,AAmCC,IAAA;QAnCY,wBAAe,kBAmC3B,CAAA;IACL,CAAC,EAtCM,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAsCd;AAAD,CAAC,EAtCE,GAAG,KAAH,GAAG,QAsCL;AAED,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC","file":"Services/AuthInterceptor.js","sourcesContent":["module App.Services {\r\n    \r\n        export class AuthInterceptor {\r\n            localStorageService: App.Services.LocalStorageService;\r\n            $q: ng.IQService;\r\n            $location: ng.ILocationService;\r\n            \r\n            request = (config) => {\r\n                config.headers = config.headers || {};\r\n               \r\n                var authData = localStorage[\"ngStorage-authorizationData\"];\r\n                if (authData) {\r\n                    authData = JSON.parse(authData);\r\n                    config.headers.Authorization = 'Bearer ' + authData[\"token\"];\r\n                    console.log(config.headers.Authorization );\r\n                }\r\n                return config;\r\n            }\r\n            responseError = (rejection: any) => {\r\n                if (rejection.status === 401) {\r\n                    location.assign('/login');\r\n                }\r\n                else if (rejection.status === 403) {\r\n                    location.assign('/accessforbidden');\r\n                }\r\n                return this.$q.reject(\"Client side error\");\r\n            }\r\n    \r\n            constructor(localStorageService: App.Services.LocalStorageService,\r\n                $location: ng.ILocationService,\r\n                $q: ng.IQService\r\n            ) {\r\n                this.localStorageService = localStorageService;\r\n                this.$q = $q;\r\n                this.$location = $location;\r\n            }\r\n    \r\n        }\r\n    }\r\n    \r\n    app2.service('authInterceptor', App.Services.AuthInterceptor);"],"sourceRoot":"/source/"}