{"version":3,"sources":["node_modulesss/rx/ts/core/concurrency/scheduleditem.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,4DAA4D;AAC5D,IAAO,EAAE,CAsBR;AAtBD,WAAO,EAAE;IACL,IAAc,SAAS,CAoBtB;IApBD,WAAc,SAAS;IAoBvB,CAAC,EApBa,SAAS,GAAT,YAAS,KAAT,YAAS,QAoBtB;AACL,CAAC,EAtBM,EAAE,KAAF,EAAE,QAsBR;AAED,CAAC;IACG,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,UAAC,EAAE,EAAE,CAAC,IAAK,OAAA,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,cAAO,CAAC,CAAC,EAA9B,CAA8B,EAAE,GAAG,CAAC,CAAC;IACpH,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,UAAC,EAAE,EAAE,CAAC,IAAK,OAAA,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,cAAO,CAAC,CAAC,EAA9B,CAA8B,EAAE,GAAG,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC;IAEnI,IAAI,CAAC,SAAS,CAAA;IACd,IAAI,CAAC,KAAK,CAAC;IACX,IAAI,CAAC,MAAM,CAAC;IACZ,IAAI,CAAC,OAAO,CAAC;IACb,IAAI,CAAC,QAAQ,CAAC;IACd,IAAI,CAAC,UAAU,CAAC;IAEhB,IAAI,CAAC,MAAM,EAAE,CAAC;IACd,IAAI,CAAC,GAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,CAAC,GAAY,IAAI,CAAC,WAAW,EAAE,CAAC;IACpC,IAAI,CAAC,GAAmB,IAAI,CAAC,UAAU,EAAE,CAAC;AAC9C,CAAC,CAAC,CAAA","file":"node_modulesss/rx/ts/core/concurrency/scheduleditem.js","sourcesContent":["/// <reference path=\"./scheduler.ts\" />\n/// <reference path=\"../disposables/booleandisposable.ts\" />\nmodule Rx {\n    export module internals {\n        export interface ScheduledItem<TTime> {\n            scheduler: IScheduler;\n            state: TTime;\n            action: (scheduler: IScheduler, state: any) => IDisposable;\n            dueTime: TTime;\n            comparer: (x: TTime, y: TTime) => number;\n            disposable: SingleAssignmentDisposable;\n\n            invoke(): void;\n            compareTo(other: ScheduledItem<TTime>): number;\n            isCancelled(): boolean;\n            invokeCore(): IDisposable;\n        }\n\n        interface ScheduledItemStatic {\n            new <TTime>(scheduler: IScheduler, state: any, action: (scheduler: IScheduler, state: any) => IDisposable, dueTime: TTime, comparer?: _Comparer<TTime, number>):ScheduledItem<TTime>;\n        }\n\n        export var ScheduledItem: ScheduledItemStatic\n    }\n}\n\n(function() {\n    var item = new Rx.internals.ScheduledItem(Rx.Scheduler.default, {}, (sc, s) => Rx.Disposable.create(() => {}), 100);\n    var item = new Rx.internals.ScheduledItem(Rx.Scheduler.default, {}, (sc, s) => Rx.Disposable.create(() => {}), 100, (x, y) => 500);\n\n    item.scheduler\n    item.state;\n    item.action;\n    item.dueTime;\n    item.comparer;\n    item.disposable;\n\n    item.invoke();\n    var n: number = item.compareTo(item);\n    var b: boolean = item.isCancelled();\n    var d : Rx.IDisposable= item.invokeCore();\n})\n"],"sourceRoot":"/source/"}