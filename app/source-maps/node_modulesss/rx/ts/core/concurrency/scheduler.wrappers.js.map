{"version":3,"sources":["node_modulesss/rx/ts/core/concurrency/scheduler.wrappers.ts"],"names":[],"mappings":"AAAA,qDAAqD;AAYrD,CAAC;IACG,IAAI,CAAC,GAAmB,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,cAAO,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAA","file":"node_modulesss/rx/ts/core/concurrency/scheduler.wrappers.js","sourcesContent":["/// <reference path=\"../disposables/disposable.ts\" />\nmodule Rx {\n    export interface IScheduler {\n        /**\n         * Returns a scheduler that wraps the original scheduler, adding exception handling for scheduled actions.\n         * @param {Function} handler Handler that's run if an exception is caught. The exception will be rethrown if the handler returns false.\n         * @returns {Scheduler} Wrapper around the original scheduler, enforcing exception handling.\n         */\n        catch(handler: Function): IScheduler;\n    }\n}\n\n(function() {\n    var s : Rx.IScheduler = Rx.Scheduler.default.catch(() => {});\n})\n"],"sourceRoot":"/source/"}