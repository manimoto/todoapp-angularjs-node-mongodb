{"version":3,"sources":["node_modulesss/rx/ts/core/subjects/anonymoussubject.ts"],"names":[],"mappings":"AAAA,qCAAqC;AACrC,IAAO,EAAE,CAgBR;AAhBD,WAAO,EAAE;AAgBT,CAAC,EAhBM,EAAE,KAAF,EAAE,QAgBR;AAED,CAAC;IACG,IAAI,CAAC,GAAkC,IAAI,EAAE,CAAC,gBAAgB,EAAW,CAAC;AAC9E,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/subjects/anonymoussubject.js","sourcesContent":["/// <reference path=\"./subject.ts\" />\nmodule Rx {\n    export interface AnonymousSubject<T> extends Subject<T> { }\n\n    interface AnonymousSubjectStatic {\n        /**\n         * Creates a subject that can only receive one value and that value is cached for all future observations.\n         * @constructor\n         */\n        new <T>(): AnonymousSubject<T>;\n    }\n\n    /**\n     *  Represents the result of an asynchronous operation.\n     *  The last value before the OnCompleted notification, or the error received through OnError, is sent to all subscribed observers.\n     */\n    export var AnonymousSubject: AnonymousSubjectStatic;\n}\n\n(function() {\n    var s : Rx.AnonymousSubject<boolean> = new Rx.AnonymousSubject<boolean>();\n});\n"],"sourceRoot":"/source/"}