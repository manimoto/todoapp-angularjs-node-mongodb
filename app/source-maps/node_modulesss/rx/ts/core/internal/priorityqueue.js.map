{"version":3,"sources":["node_modulesss/rx/ts/core/internal/priorityqueue.ts"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,IAAO,EAAE,CAuBR;AAvBD,WAAO,EAAE;IACL,IAAc,SAAS,CAqBtB;IArBD,WAAc,SAAS;IAqBvB,CAAC,EArBa,SAAS,GAAT,YAAS,KAAT,YAAS,QAqBtB;AACL,CAAC,EAvBM,EAAE,KAAF,EAAE,QAuBR;AAED,CAAC;IACG,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,aAAa,CAAS,GAAG,CAAC,CAAC;IACxD,IAAI,CAAC,GAAY,KAAK,CAAC,MAAM,CAAA;IAC7B,IAAI,CAAC,GAAa,KAAK,CAAC,gBAAgB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACjD,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACnB,IAAI,IAAI,GAAuC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC5D,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACpB,IAAI,IAAI,GAAuC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC/D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAEvB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC;AACzC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/internal/priorityqueue.js","sourcesContent":["/// <reference path=\"../concurrency/scheduleditem.ts\" />\nmodule Rx {\n    export module internals {\n        // Priority Queue for Scheduling\n        export interface PriorityQueue<TTime> {\n            length: number;\n\n            isHigherPriority(left: number, right: number): boolean;\n            percolate(index: number): void;\n            heapify(index: number): void;\n            peek(): ScheduledItem<TTime>;\n            removeAt(index: number): void;\n            dequeue(): ScheduledItem<TTime>;\n            enqueue(item: ScheduledItem<TTime>): void;\n            remove(item: ScheduledItem<TTime>): boolean;\n        }\n\n        interface PriorityQueueStatic {\n                new <T>(capacity: number) : PriorityQueue<T>;\n                count: number;\n        }\n\n        export var PriorityQueue : PriorityQueueStatic;\n    }\n}\n\n(function() {\n    var queue = new Rx.internals.PriorityQueue<number>(100);\n    var n : number = queue.length\n    var b : boolean = queue.isHigherPriority(1, 100);\n    queue.percolate(100);\n    queue.heapify(100);\n    var item: Rx.internals.ScheduledItem<number> = queue.peek();\n    queue.removeAt(100);\n    var item: Rx.internals.ScheduledItem<number> = queue.dequeue();\n    queue.enqueue(item);\n    b = queue.remove(item);\n\n    n = Rx.internals.PriorityQueue.count;\n});\n"],"sourceRoot":"/source/"}