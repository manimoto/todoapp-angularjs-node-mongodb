{"version":3,"sources":["node_modulesss/rx/ts/core/anonymousobserver.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,IAAO,EAAE,CAgCR;AAhCD,WAAO,EAAE;AAgCT,CAAC,EAhCM,EAAE,KAAF,EAAE,QAgCR;AAGD,CAAC;IACG,IAAI,SAA+B,CAAC;IACpC,IAAI,iBAA+C,CAAC;IAEpD,SAAS,GAAG,iBAAiB,CAAC;AAClC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/anonymousobserver.js","sourcesContent":["/// <reference path=\"./observer-lite.ts\" />\nmodule Rx {\n    /**\n     * Class to create an Observer instance from delegate-based implementations of the on* methods.\n     */\n    export interface AnonymousObserver<T> extends Observer<T> {\n        /**\n        * Notifies the observer of a new element in the sequence.\n        * @param {Any} value Next element in the sequence.\n        */\n        onNext(value: T): void;\n        /**\n        * Notifies the observer that an exception has occurred.\n        * @param {Any} error The error that has occurred.\n        */\n        onError(exception: any): void;\n        /**\n        * Notifies the observer of the end of the sequence.\n        */\n        onCompleted(): void;\n    }\n\n    interface AnonymousObserverStatic {\n        /**\n         * Creates an observer from the specified OnNext, OnError, and OnCompleted actions.\n         * @param {Any} onNext Observer's OnNext action implementation.\n         * @param {Any} onError Observer's OnError action implementation.\n         * @param {Any} onCompleted Observer's OnCompleted action implementation.\n         */\n        new <T>(onNext?: (value: T) => void, onError?: (exception: any) => void, onCompleted?: () => void): AnonymousObserver<T>;\n    }\n\n    export var AnonymousObserver : AnonymousObserverStatic;\n}\n\n\n(function() {\n    var iObserver: Rx.IObserver<number>;\n    var anonymousObserver: Rx.AnonymousObserver<number>;\n\n    iObserver = anonymousObserver;\n});\n"],"sourceRoot":"/source/"}