{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/dowhile.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAc5C,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,cAAM,OAAA,KAAK,EAAL,CAAK,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/dowhile.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        *  Repeats source as long as condition holds emulating a do while loop.\n        *\n        * @param {Function} condition The condition which determines if the source will be repeated.\n        * @param {Observable} source The observable sequence that will be run if the condition function returns true.\n        * @returns {Observable} An observable sequence which is repeated as long as the condition holds.\n        */\n        doWhile(condition: () => boolean): Observable<T>;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<string>;\n    o = o.doWhile(() => false);\n});\n"],"sourceRoot":"/source/"}