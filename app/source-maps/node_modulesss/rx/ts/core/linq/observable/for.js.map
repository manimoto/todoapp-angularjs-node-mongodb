{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/for.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAsB5C,CAAC;IACG,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,CAAC,CAAC;IACjC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,CAAC,CAAC;AAEvC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/for.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface ObservableStatic {\n        /**\n        *  Concatenates the observable sequences obtained by running the specified result selector for each element in source.\n        * There is an alias for this method called 'forIn' for browsers <IE9\n        * @param {Array} sources An array of values to turn into an observable sequence.\n        * @param {Function} resultSelector A function to apply to each item in the sources array to turn it into an observable sequence.\n        * @returns {Observable} An observable sequence from the concatenated observable sequences.\n        */\n        for<T, TResult>(sources: T[], resultSelector: _Selector<T, TResult>, thisArg?: any): Observable<TResult>;\n        /**\n        *  Concatenates the observable sequences obtained by running the specified result selector for each element in source.\n        * There is an alias for this method called 'forIn' for browsers <IE9\n        * @param {Array} sources An array of values to turn into an observable sequence.\n        * @param {Function} resultSelector A function to apply to each item in the sources array to turn it into an observable sequence.\n        * @returns {Observable} An observable sequence from the concatenated observable sequences.\n        */\n        forIn<T, TResult>(sources: T[], resultSelector: _Selector<T, TResult>, thisArg?: any): Observable<TResult>;\n    }\n}\n\n(function() {\n    Rx.Observable.for(['a'], x => x);\n    Rx.Observable.forIn(['a'], x => x);\n\n});\n"],"sourceRoot":"/source/"}