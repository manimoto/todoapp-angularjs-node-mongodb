{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/map.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAoB3C,CAAC;IACG,IAAI,CAA0B,CAAC;IAC/B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;IACvB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,EAAJ,CAAI,EAAE,EAAE,CAAC,CAAC;IAC3B,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;IAC1B,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,IAAI,EAAJ,CAAI,EAAE,EAAE,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/map.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Projects each element of an observable sequence into a new form by incorporating the element's index.\n        * @param {Function} selector A transform function to apply to each source element; the second parameter of the function represents the index of the source element.\n        * @param {Any} [thisArg] Object to use as this when executing callback.\n        * @returns {Observable} An observable sequence whose elements are the result of invoking the transform function on each element of source.\n        */\n        select<TResult>(selector: _Selector<T, TResult>, thisArg?: any): Observable<TResult>;\n        /**\n        * Projects each element of an observable sequence into a new form by incorporating the element's index.\n        * @param {Function} selector A transform function to apply to each source element; the second parameter of the function represents the index of the source element.\n        * @param {Any} [thisArg] Object to use as this when executing callback.\n        * @returns {Observable} An observable sequence whose elements are the result of invoking the transform function on each element of source.\n        */\n        map<TResult>(selector: _Selector<T, TResult>, thisArg?: any): Observable<TResult>;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<boolean>;\n    o = o.map((x) => true);\n    o = o.map((x) => true, {});\n    o = o.select((x) => true);\n    o = o.select((x) => true, {});\n});\n"],"sourceRoot":"/source/"}