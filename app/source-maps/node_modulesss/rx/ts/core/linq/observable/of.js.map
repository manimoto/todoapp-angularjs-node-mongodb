{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/of.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,uDAAuD;AAkBvD,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/of.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\n/// <reference path=\"../../concurrency/scheduler.ts\" />\nmodule Rx {\n    export interface ObservableStatic {\n        /**\n        *  This method creates a new Observable instance with a variable number of arguments, regardless of number or type of the arguments.\n        * @returns {Observable} The observable sequence whose elements are pulled from the given arguments.\n        */\n        of<T>(...values: T[]): Observable<T>;\n\n        /**\n        *  This method creates a new Observable instance with a variable number of arguments, regardless of number or type of the arguments.\n        * @param {Scheduler} scheduler A scheduler to use for scheduling the arguments.\n        * @returns {Observable} The observable sequence whose elements are pulled from the given arguments.\n        */\n        ofWithScheduler<T>(scheduler?: IScheduler, ...values: T[]): Observable<T>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<number>;\n    o = Rx.Observable.of(1, 2, 3, 4, 5);\n    o = Rx.Observable.ofWithScheduler(Rx.Scheduler.async, 1, 2, 3, 4, 5);\n});\n"],"sourceRoot":"/source/"}