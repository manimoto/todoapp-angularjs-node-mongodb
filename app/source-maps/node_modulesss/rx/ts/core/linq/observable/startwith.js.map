{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/startwith.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAyB3C,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/startwith.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        *  Prepends a sequence of values to an observable sequence with an optional scheduler and an argument list of values to prepend.\n        *  @example\n        *  var res = source.startWith(1, 2, 3);\n        *  var res = source.startWith(Rx.Scheduler.timeout, 1, 2, 3);\n        * @param {Arguments} args The specified values to prepend to the observable sequence\n        * @returns {Observable} The source sequence prepended with the specified values.\n        */\n        startWith(...values: T[]): Observable<T>;\n        /**\n        *  Prepends a sequence of values to an observable sequence with an optional scheduler and an argument list of values to prepend.\n        *  @example\n        *  var res = source.startWith(1, 2, 3);\n        *  var res = source.startWith(Rx.Scheduler.timeout, 1, 2, 3);\n        * @param {Arguments} args The specified values to prepend to the observable sequence\n        * @returns {Observable} The source sequence prepended with the specified values.\n        */\n        startWith(scheduler: IScheduler, ...values: T[]): Observable<T>;\n    }\n}\n\n\n(function() {\n    var o: Rx.Observable<number>;\n    o = o.startWith(1, 2, 3, 4, 5);\n    o = o.startWith(Rx.Scheduler.async, 1, 2, 3, 4, 5);\n});\n"],"sourceRoot":"/source/"}