{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/skipuntil.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAY3C,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,IAAI,EAAyB,CAAC;IAE9B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/skipuntil.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Returns the values from the source observable sequence only after the other observable sequence produces a value.\n        * @param {Observable | Promise} other The observable sequence or Promise that triggers propagation of elements of the source sequence.\n        * @returns {Observable} An observable sequence containing the elements of the source sequence starting from the point the other sequence triggered propagation.\n        */\n        skipUntil<T2>(other: ObservableOrPromise<T2>): Observable<T>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<number>;\n    var o2: Rx.Observable<number>;\n\n    o = o.skipUntil(o2);\n});\n"],"sourceRoot":"/source/"}