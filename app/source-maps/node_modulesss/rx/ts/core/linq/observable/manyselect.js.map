{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/manyselect.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,uDAAuD;AAoBvD,CAAC;IACG,IAAI,CAAwB,CAAC;IAE7B,IAAI,EAAE,GAAyC,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAE,EAAT,CAAS,CAAC,CAAC;IACxE,IAAI,EAAE,GAAyC,CAAC,CAAC,UAAU,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,EAAE,EAAT,CAAS,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/manyselect.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\n/// <reference path=\"../../concurrency/scheduler.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Comonadic bind operator.\n        * @param {Function} selector A transform function to apply to each element.\n        * @param {Object} scheduler Scheduler used to execute the operation. If not specified, defaults to the ImmediateScheduler.\n        * @returns {Observable} An observable sequence which results from the comonadic bind operation.\n        */\n        manySelect<TResult>(selector: _Selector<Observable<T>, TResult>, scheduler?: IScheduler): Observable<TResult>;\n        /**\n        * Comonadic bind operator.\n        * @param {Function} selector A transform function to apply to each element.\n        * @param {Object} scheduler Scheduler used to execute the operation. If not specified, defaults to the ImmediateScheduler.\n        * @returns {Observable} An observable sequence which results from the comonadic bind operation.\n        */\n        extend<TResult>(selector: _Selector<Observable<T>, TResult>, scheduler?: IScheduler): Observable<TResult>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<string>;\n\n    var oo: Rx.Observable<Rx.Observable<string>> = o.extend(x => x.first());\n    var oo: Rx.Observable<Rx.Observable<string>> = o.manySelect(x => x.first());\n});\n"],"sourceRoot":"/source/"}