{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/filter.ts"],"names":[],"mappings":"AAAA,uDAAuD;AA4BvD,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;IACvB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,EAAJ,CAAI,EAAE,EAAE,CAAC,CAAC;IAC3B,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;IACxB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,EAAJ,CAAI,EAAE,EAAE,CAAC,CAAC;AAEhC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/filter.js","sourcesContent":["/// <reference path=\"../../concurrency/scheduler.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        *  Filters the elements of an observable sequence based on a predicate by incorporating the element's index.\n        *\n        * @example\n        *  var res = source.where(function (value) { return value < 10; });\n        *  var res = source.where(function (value, index) { return value < 10 || index < 10; });\n        * @param {Function} predicate A function to test each source element for a condition; the second parameter of the function represents the index of the source element.\n        * @param {Any} [thisArg] Object to use as this when executing callback.\n        * @returns {Observable} An observable sequence that contains elements from the input sequence that satisfy the condition.\n        */\n        where(predicate: _Predicate<T>, thisArg?: any): Observable<T>;\n        /**\n        *  Filters the elements of an observable sequence based on a predicate by incorporating the element's index.\n        *\n        * @example\n        *  var res = source.where(function (value) { return value < 10; });\n        *  var res = source.where(function (value, index) { return value < 10 || index < 10; });\n        * @param {Function} predicate A function to test each source element for a condition; the second parameter of the function represents the index of the source element.\n        * @param {Any} [thisArg] Object to use as this when executing callback.\n        * @returns {Observable} An observable sequence that contains elements from the input sequence that satisfy the condition.\n        */\n        filter(predicate: _Predicate<T>, thisArg?: any): Observable<T>;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<number>;\n    o = o.where(i => true);\n    o = o.where(i => true, {});\n    o = o.filter(i => true);\n    o = o.filter(i => true, {});\n\n});\n"],"sourceRoot":"/source/"}