{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/never.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,uDAAuD;AAWvD,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,EAAU,CAAC;AACtC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/never.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\n/// <reference path=\"../../concurrency/scheduler.ts\" />\nmodule Rx {\n    export interface ObservableStatic {\n        /**\n        * Returns a non-terminating observable sequence, which can be used to denote an infinite duration (e.g. when using reactive joins).\n        * @returns {Observable} An observable sequence whose observers will never get called.\n        */\n        never<T>(): Observable<T>;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<string>;\n    o = Rx.Observable.never<string>();\n});\n"],"sourceRoot":"/source/"}