{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/fromeventpattern.ts"],"names":[],"mappings":"AAAA,4CAA4C","file":"node_modulesss/rx/ts/core/linq/observable/fromeventpattern.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface ObservableStatic {\n        /**\n        * Creates an observable sequence from an event emitter via an addHandler/removeHandler pair.\n        * @param {Function} addHandler The function to add a handler to the emitter.\n        * @param {Function} [removeHandler] The optional function to remove a handler from an emitter.\n        * @param {Function} [selector] A selector which takes the arguments from the event handler to produce a single item to yield on next.\n        * @returns {Observable} An observable sequence which wraps an event from an event emitter\n        */\n        fromEventPattern<T>(addHandler: (handler: Function) => void, removeHandler: (handler: Function) => void, selector?: (arguments: any[]) => T): Observable<T>;\n    }\n}\n"],"sourceRoot":"/source/"}