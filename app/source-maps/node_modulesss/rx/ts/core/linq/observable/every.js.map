{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/every.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAa5C,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,IAAI,CAA0B,CAAC;IAC/B,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACd,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;IACxB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAE,EAAE,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/every.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Determines whether all elements of an observable sequence satisfy a condition.\n        * @param {Function} [predicate] A function to test each element for a condition.\n        * @param {Any} [thisArg] Object to use as this when executing callback.\n        * @returns {Observable} An observable sequence containing a single element determining whether all elements in the source sequence pass the test in the specified predicate.\n        */\n        every(predicate?: _Predicate<T>, thisArg?: any): Observable<boolean>;\t// alias for all\n    }\n}\n\n(function () {\n    var o : Rx.Observable<string>;\n    var b : Rx.Observable<boolean>;\n    b = o.every();\n    b = o.every(() => true);\n    b = o.every(() => true, {});\n});\n"],"sourceRoot":"/source/"}