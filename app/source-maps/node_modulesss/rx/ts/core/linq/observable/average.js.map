{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/average.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAa5C,CAAC;IACG,IAAI,EAA0B,CAAC;IAC/B,IAAI,EAA0B,CAAC;IAE/B,EAAE,CAAC,OAAO,EAAE,CAAC;IACb,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,GAAG,CAAC,EAAZ,CAAY,CAAC,CAAC;IACtC,EAAE,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,GAAG,CAAC,EAAZ,CAAY,EAAE,EAAE,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/average.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Computes the average of an observable sequence of values that are in the sequence or obtained by invoking a transform function on each element of the input sequence if present.\n        * @param {Function} [selector] A transform function to apply to each element.\n        * @param {Any} [thisArg] Object to use as this when executing callback.\n        * @returns {Observable} An observable sequence containing a single element with the average of the sequence of values.\n        */\n        average(keySelector?: _Selector<T, number>, thisArg?: any): Observable<number>;\n    }\n}\n\n(function () {\n    var os : Rx.Observable<string>;\n    var on : Rx.Observable<number>;\n\n    on.average();\n    os.average((v, i, s) => v.length + i);\n    os.average((v, i, s) => v.length + i, {});\n});\n"],"sourceRoot":"/source/"}