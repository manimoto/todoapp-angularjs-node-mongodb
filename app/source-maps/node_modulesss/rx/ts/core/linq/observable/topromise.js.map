{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/topromise.ts"],"names":[],"mappings":"AAAA,2CAA2C;AA8B3C,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,IAAI,CAAsB,CAAC;IAC3B,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;AACtB,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/topromise.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\nmodule Rx {\n    export interface Observable<T> {\n        /*\n         * Converts an existing observable sequence to an ES6 Compatible Promise\n         * @example\n         * var promise = Rx.Observable.return(42).toPromise(RSVP.Promise);\n         *\n         * // With config\n         * Rx.config.Promise = RSVP.Promise;\n         * var promise = Rx.Observable.return(42).toPromise();\n         * @param {Function} [promiseCtor] The constructor of the promise. If not provided, it looks for it in Rx.config.Promise.\n         * @returns {Promise} An ES6 compatible promise with the last value from the observable sequence.\n         */\n        toPromise(promiseCtor?: { new (resolver: (resolvePromise: (value: T) => void, rejectPromise: (reason: any) => void) => void): IPromise<T>; }): IPromise<T>;\n        /*\n         * Converts an existing observable sequence to an ES6 Compatible Promise\n         * @example\n         * var promise = Rx.Observable.return(42).toPromise(RSVP.Promise);\n         *\n         * // With config\n         * Rx.config.Promise = RSVP.Promise;\n         * var promise = Rx.Observable.return(42).toPromise();\n         * @param {Function} [promiseCtor] The constructor of the promise. If not provided, it looks for it in Rx.config.Promise.\n         * @returns {Promise} An ES6 compatible promise with the last value from the observable sequence.\n         */\n        toPromise<TPromise extends IPromise<T>>(promiseCtor: { new (resolver: (resolvePromise: (value: T) => void, rejectPromise: (reason: any) => void) => void): TPromise; }): TPromise;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<number>;\n    var t : Rx.Promise<number>;\n    t = o.toPromise();\n});\n"],"sourceRoot":"/source/"}