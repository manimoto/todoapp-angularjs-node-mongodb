{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/create.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,+CAA+C;AAgB/C,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAS,UAAA,CAAC,IAAK,CAAC,CAAC,CAAC;IAC1C,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAS,UAAA,CAAC,IAAI,OAAA,EAAE,CAAC,UAAU,CAAC,KAAK,EAAnB,CAAmB,CAAC,CAAC;IAC3D,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAS,UAAA,CAAC,IAAI,OAAA,cAAO,CAAC,EAAR,CAAQ,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/create.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\n/// <reference path=\"../../observer-lite.ts\" />\nmodule Rx {\n    export interface ObservableStatic {\n        /**\n        *  Creates an observable sequence from a specified subscribe method implementation.\n        * @example\n        *  var res = Rx.Observable.create(function (observer) { return function () { } );\n        *  var res = Rx.Observable.create(function (observer) { return Rx.Disposable.empty; } );\n        *  var res = Rx.Observable.create(function (observer) { } );\n        * @param {Function} subscribe Implementation of the resulting observable sequence's subscribe method, returning a function that will be wrapped in a Disposable.\n        * @returns {Observable} The observable sequence with the specified implementation for the Subscribe method.\n        */\n        create<T>(subscribe: (observer: Observer<T>) => IDisposable | Function | void): Observable<T>;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<string>;\n    o = Rx.Observable.create<string>(o => {});\n    o = Rx.Observable.create<string>(o => Rx.Disposable.empty);\n    o = Rx.Observable.create<string>(o => () => {});\n});\n"],"sourceRoot":"/source/"}