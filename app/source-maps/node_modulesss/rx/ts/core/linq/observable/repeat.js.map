{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/repeat.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,uDAAuD;AAoBvD,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChD,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACnD,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/repeat.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\n/// <reference path=\"../../concurrency/scheduler.ts\" />\nmodule Rx {\n    export interface ObservableStatic {\n        /**\n         *  Generates an observable sequence that repeats the given element the specified number of times, using the specified scheduler to send out observer messages.\n         *\n         * @example\n         *  var res = Rx.Observable.repeat(42);\n         *  var res = Rx.Observable.repeat(42, 4);\n         *  3 - res = Rx.Observable.repeat(42, 4, Rx.Scheduler.timeout);\n         *  4 - res = Rx.Observable.repeat(42, null, Rx.Scheduler.timeout);\n         * @param {Mixed} value Element to repeat.\n         * @param {Number} repeatCount [Optiona] Number of times to repeat the element. If not specified, repeats indefinitely.\n         * @param {Scheduler} scheduler Scheduler to run the producer loop on. If not specified, defaults to Scheduler.immediate.\n         * @returns {Observable} An observable sequence that repeats the given element the specified number of times.\n         */\n        repeat<T>(value: T, repeatCount?: number | void, scheduler?: IScheduler): Observable<T>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<number>;\n    Rx.Observable.repeat(42, 4, Rx.Scheduler.async);\n    Rx.Observable.repeat(42, null, Rx.Scheduler.async);\n    Rx.Observable.repeat(42);\n});\n"],"sourceRoot":"/source/"}