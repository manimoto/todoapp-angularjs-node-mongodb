{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/switchfirst.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAa3C,CAAC;IACG,IAAI,CAAuC,CAAC;IAC5C,IAAI,EAAyB,CAAC;IAC9B,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;AACzB,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/switchfirst.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Performs a exclusive waiting for the first to finish before subscribing to another observable.\n        * Observables that come in between subscriptions will be dropped on the floor.\n        * @returns {Observable} A exclusive observable with only the results that happen when subscribed.\n        */\n        switchFirst(): T;\n    }\n}\n\n\n(function() {\n    var o: Rx.Observable<Rx.Observable<number>>;\n    var or: Rx.Observable<number>;\n    or = o.switchFirst();\n});\n"],"sourceRoot":"/source/"}