{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/retry.ts"],"names":[],"mappings":"AAAA,2CAA2C;AAiB3C,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,CAAC,CAAC,KAAK,EAAE,CAAC;IACV,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/retry.js","sourcesContent":["/// <reference path=\"../../observable.ts\"/>\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        *  Repeats the source observable sequence the specified number of times or until it successfully terminates. If the retry count is not specified, it retries indefinitely.\n        *  Note if you encounter an error and want it to retry once, then you must use .retry(2);\n        *\n        * @example\n        *  var res = retried = retry.repeat();\n        *  var res = retried = retry.repeat(2);\n        * @param {Number} [retryCount]  Number of times to retry the sequence. If not provided, retry the sequence indefinitely.\n        * @returns {Observable} An observable sequence producing the elements of the given sequence repeatedly until it terminates successfully.\n        */\n        retry(retryCount?: number): Observable<T>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<number>;\n    o.retry();\n    o.retry(42);\n});\n"],"sourceRoot":"/source/"}