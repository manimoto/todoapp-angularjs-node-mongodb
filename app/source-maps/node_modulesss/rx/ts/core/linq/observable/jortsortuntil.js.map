{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/jortsortuntil.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAY5C,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,IAAI,CAAC,GAA6B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/jortsortuntil.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * jortSort checks if your inputs are sorted until another Observable sequence fires.\n        * See http://jort.technology/ for full details.\n        * @returns {Observable} An observable which has a single value of true if sorted, else false.\n        */\n        jortSortUntil<TOther>(other: TOther): Observable<boolean>;\n    }\n}\n\n(function () {\n    var o : Rx.Observable<number>;\n    var b : Rx.Observable<boolean> =  o.jortSortUntil(o);\n});\n"],"sourceRoot":"/source/"}