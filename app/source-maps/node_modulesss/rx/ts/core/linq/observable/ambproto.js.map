{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/ambproto.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAY5C,CAAC;IACG,IAAI,CAAyB,CAAC;IAC9B,IAAI,CAAyB,CAAC;IAC9B,IAAI,EAA2B,CAAC;IAChC,IAAI,CAAsB,CAAC;IAE3B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACd,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/ambproto.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Propagates the observable sequence or Promise that reacts first.\n        * @param {Observable} rightSource Second observable sequence or Promise.\n        * @returns {Observable} {Observable} An observable sequence that surfaces either of the given sequences, whichever reacted first.\n        */\n        amb(observable: ObservableOrPromise<T>): Observable<T>;\n    }\n}\n\n(function() {\n    var r : Rx.Observable<string>;\n    var o : Rx.Observable<string>;\n    var io : Rx.IObservable<string>;\n    var p : Rx.Promise<string>;\n\n    r = r.amb(o);\n    r = r.amb(io);\n    r = r.amb(p);\n});\n"],"sourceRoot":"/source/"}