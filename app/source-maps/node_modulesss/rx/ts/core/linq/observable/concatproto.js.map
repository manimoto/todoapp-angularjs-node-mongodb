{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/concatproto.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAW5C,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,IAAI,EAA0B,CAAC;IAC/B,IAAI,EAAsB,CAAC;IAC3B,IAAI,CAAqB,CAAC;IAE1B,IAAI,CAAC,GAA0B,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/concatproto.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Concatenates all the observable sequences.  This takes in either an array or variable arguments to concatenate.\n        * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.\n        */\n        concat(...sources: ObservableOrPromise<T>[]): Observable<T>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<string>;\n    var io: Rx.IObservable<string>;\n    var so: Rx.Subject<string>;\n    var p: Rx.Promise<string>;\n\n    var o: Rx.Observable<string> = o.concat(o, io, so, p);\n});\n"],"sourceRoot":"/source/"}