{"version":3,"sources":["node_modulesss/rx/ts/core/linq/observable/mergeconcat.ts"],"names":[],"mappings":"AAAA,4CAA4C;AA4B5C,CAAC;IACG,IAAI,CAAwB,CAAC;IAC7B,IAAI,EAAwC,CAAC;IAC7C,IAAI,CAAqB,CAAC;IAE1B,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/linq/observable/mergeconcat.js","sourcesContent":["/// <reference path=\"../../observable.ts\" />\nmodule Rx {\n    export interface Observable<T> {\n        /**\n        * Merges an observable sequence of observable sequences into an observable sequence, limiting the number of concurrent subscriptions to inner sequences.\n        * Or merges two observable sequences into a single observable sequence.\n        *\n        * @example\n        * 1 - merged = sources.merge(1);\n        * 2 - merged = source.merge(otherSource);\n        * @param {Mixed} [maxConcurrentOrOther] Maximum number of inner observable sequences being subscribed to concurrently or the second observable sequence.\n        * @returns {Observable} The observable sequence that merges the elements of the inner sequences.\n        */\n        merge(maxConcurrent: number): T;\n        /**\n        * Merges an observable sequence of observable sequences into an observable sequence, limiting the number of concurrent subscriptions to inner sequences.\n        * Or merges two observable sequences into a single observable sequence.\n        *\n        * @example\n        * 1 - merged = sources.merge(1);\n        * 2 - merged = source.merge(otherSource);\n        * @param {Mixed} [maxConcurrentOrOther] Maximum number of inner observable sequences being subscribed to concurrently or the second observable sequence.\n        * @returns {Observable} The observable sequence that merges the elements of the inner sequences.\n        */\n        merge(other: ObservableOrPromise<T>): Observable<T>;\n    }\n}\n\n(function() {\n    var o: Rx.Observable<string>;\n    var oo: Rx.Observable<Rx.Observable<string>>;\n    var p: Rx.Promise<string>;\n\n    o = oo.merge(1);\n    o = o.merge(p);\n    o = o.merge(o);\n});\n"],"sourceRoot":"/source/"}