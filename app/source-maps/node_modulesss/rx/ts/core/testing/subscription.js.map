{"version":3,"sources":["node_modulesss/rx/ts/core/testing/subscription.ts"],"names":[],"mappings":"AAAA,IAAO,EAAE,CA2BR;AA3BD,WAAO,EAAE;AA2BT,CAAC,EA3BM,EAAE,KAAF,EAAE,QA2BR;AAED,CAAC;IACG,IAAI,CAAC,GAAoB,IAAI,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAClD,IAAI,CAAC,GAAoB,IAAI,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAEvD,IAAI,CAAC,GAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClC,CAAC,CAAC,CAAC","file":"node_modulesss/rx/ts/core/testing/subscription.js","sourcesContent":["module Rx {\n    export interface Subscription {\n        /**\n         * Checks whether the given subscription is equal to the current instance.\n         * @param other Subscription object to check for equality.\n         * @returns {Boolean} true if both objects are equal; false otherwise.\n         */\n        equals(other: Subscription): boolean;\n        /**\n         * Returns a string representation of the current Subscription value.\n         * @returns {String} String representation of the current Subscription value.\n         */\n        toString(): string;\n    }\n\n    interface SubscriptionStatic {\n        /**\n         * Creates a new subscription object with the given virtual subscription and unsubscription time.\n         *\n         * @constructor\n         * @param {Number} subscribe Virtual time at which the subscription occurred.\n         * @param {Number} unsubscribe Virtual time at which the unsubscription occurred.\n         */\n        new (subscribeAt: number, unsubscribeAt?: number): Subscription;\n    }\n\n    export var Subscription: SubscriptionStatic;\n}\n\n(function() {\n    var s: Rx.Subscription = new Rx.Subscription(100);\n    var s: Rx.Subscription = new Rx.Subscription(100, 200);\n\n    var b: boolean = s.equals(s);\n    var st: string = s.toString();\n});\n"],"sourceRoot":"/source/"}