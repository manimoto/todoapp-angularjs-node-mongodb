{"version":3,"sources":["node_modulesss/rx/ts/core/disposables/disposable.ts"],"names":[],"mappings":"AAAA,IAAO,EAAE,CA0CR;AA1CD,WAAO,EAAE;AA0CT,CAAC,EA1CM,EAAE,KAAF,EAAE,QA0CR;AAED,CAAC;IACG,IAAI,EAAkB,CAAC;IACvB,IAAI,CAAiB,CAAC;IAEtB,EAAE,CAAC,OAAO,EAAE,CAAC;IACb,CAAC,CAAC,OAAO,EAAE,CAAC;IAEZ,CAAC,CAAC,UAAU,CAAC;IAEb,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,cAAO,CAAC,CAAC,CAAA;IAC9B,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;IACpB,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAA","file":"node_modulesss/rx/ts/core/disposables/disposable.js","sourcesContent":["module Rx {\n    export interface IDisposable {\n        dispose(): void;\n    }\n\n    export interface Disposable extends IDisposable {\n        /** Is this value disposed. */\n        isDisposed?: boolean;\n    }\n\n    interface DisposableStatic {\n        /**\n         * Provides a set of static methods for creating Disposables.\n         * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n         */\n        new (action: () => void): Disposable;\n\n        /**\n         * Creates a disposable object that invokes the specified action when disposed.\n         * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n         * @return {Disposable} The disposable object that runs the given action upon disposal.\n         */\n        create(action: () => void): Disposable;\n\n        /**\n         * Gets the disposable that does nothing when disposed.\n         */\n        empty: IDisposable;\n\n        /**\n         * Validates whether the given object is a disposable\n         * @param {Object} Object to test whether it has a dispose method\n         * @returns {Boolean} true if a disposable object, else false.\n         */\n        isDisposable(d: any): boolean;\n    }\n\n    /**\n     * Provides a set of static methods for creating Disposables.\n     * @param {Function} dispose Action to run during the first call to dispose. The action is guaranteed to be run at most once.\n     */\n    export var Disposable: DisposableStatic;\n}\n\n(function() {\n    var id: Rx.IDisposable;\n    var d : Rx.Disposable;\n\n    id.dispose();\n    d.dispose();\n\n    d.isDisposed;\n\n    Rx.Disposable.create(() => {})\n    Rx.Disposable.empty;\n    Rx.Disposable.isDisposable(d);\n})\n"],"sourceRoot":"/source/"}